// Code generated by go-swagger; DO NOT EDIT.

package auth

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"mgtu/digital-trace/main-backend-service/internal/gen/models"
)

// AuthPostOKCode is the HTTP code returned for type AuthPostOK
const AuthPostOKCode int = 200

/*
AuthPostOK Возвращаемые ответы

swagger:response authPostOK
*/
type AuthPostOK struct {

	/*
	  In: Body
	*/
	Payload *AuthPostOKBody `json:"body,omitempty"`
}

// NewAuthPostOK creates AuthPostOK with default headers values
func NewAuthPostOK() *AuthPostOK {

	return &AuthPostOK{}
}

// WithPayload adds the payload to the auth post o k response
func (o *AuthPostOK) WithPayload(payload *AuthPostOKBody) *AuthPostOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the auth post o k response
func (o *AuthPostOK) SetPayload(payload *AuthPostOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AuthPostOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AuthPostInternalServerErrorCode is the HTTP code returned for type AuthPostInternalServerError
const AuthPostInternalServerErrorCode int = 500

/*
AuthPostInternalServerError Ошибка сервера

swagger:response authPostInternalServerError
*/
type AuthPostInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error500 `json:"body,omitempty"`
}

// NewAuthPostInternalServerError creates AuthPostInternalServerError with default headers values
func NewAuthPostInternalServerError() *AuthPostInternalServerError {

	return &AuthPostInternalServerError{}
}

// WithPayload adds the payload to the auth post internal server error response
func (o *AuthPostInternalServerError) WithPayload(payload *models.Error500) *AuthPostInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the auth post internal server error response
func (o *AuthPostInternalServerError) SetPayload(payload *models.Error500) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AuthPostInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
