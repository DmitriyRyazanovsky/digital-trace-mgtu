// Code generated by go-swagger; DO NOT EDIT.

package attempt

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"mgtu/digital-trace/main-backend-service/internal/gen/models"
)

// UserAttemptAttemptIDAnswerGetOKCode is the HTTP code returned for type UserAttemptAttemptIDAnswerGetOK
const UserAttemptAttemptIDAnswerGetOKCode int = 200

/*
UserAttemptAttemptIDAnswerGetOK OK

swagger:response userAttemptAttemptIdAnswerGetOK
*/
type UserAttemptAttemptIDAnswerGetOK struct {

	/*
	  In: Body
	*/
	Payload []*UserAttemptAttemptIDAnswerGetOKBodyItems0 `json:"body,omitempty"`
}

// NewUserAttemptAttemptIDAnswerGetOK creates UserAttemptAttemptIDAnswerGetOK with default headers values
func NewUserAttemptAttemptIDAnswerGetOK() *UserAttemptAttemptIDAnswerGetOK {

	return &UserAttemptAttemptIDAnswerGetOK{}
}

// WithPayload adds the payload to the user attempt attempt Id answer get o k response
func (o *UserAttemptAttemptIDAnswerGetOK) WithPayload(payload []*UserAttemptAttemptIDAnswerGetOKBodyItems0) *UserAttemptAttemptIDAnswerGetOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the user attempt attempt Id answer get o k response
func (o *UserAttemptAttemptIDAnswerGetOK) SetPayload(payload []*UserAttemptAttemptIDAnswerGetOKBodyItems0) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UserAttemptAttemptIDAnswerGetOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*UserAttemptAttemptIDAnswerGetOKBodyItems0, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// UserAttemptAttemptIDAnswerGetInternalServerErrorCode is the HTTP code returned for type UserAttemptAttemptIDAnswerGetInternalServerError
const UserAttemptAttemptIDAnswerGetInternalServerErrorCode int = 500

/*
UserAttemptAttemptIDAnswerGetInternalServerError Ошибка сервера

swagger:response userAttemptAttemptIdAnswerGetInternalServerError
*/
type UserAttemptAttemptIDAnswerGetInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error500 `json:"body,omitempty"`
}

// NewUserAttemptAttemptIDAnswerGetInternalServerError creates UserAttemptAttemptIDAnswerGetInternalServerError with default headers values
func NewUserAttemptAttemptIDAnswerGetInternalServerError() *UserAttemptAttemptIDAnswerGetInternalServerError {

	return &UserAttemptAttemptIDAnswerGetInternalServerError{}
}

// WithPayload adds the payload to the user attempt attempt Id answer get internal server error response
func (o *UserAttemptAttemptIDAnswerGetInternalServerError) WithPayload(payload *models.Error500) *UserAttemptAttemptIDAnswerGetInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the user attempt attempt Id answer get internal server error response
func (o *UserAttemptAttemptIDAnswerGetInternalServerError) SetPayload(payload *models.Error500) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UserAttemptAttemptIDAnswerGetInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
