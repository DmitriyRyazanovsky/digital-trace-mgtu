// Code generated by go-swagger; DO NOT EDIT.

package attempt

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"mgtu/digital-trace/main-backend-service/internal/gen/models"
)

// AttemptAttemptIDClosePatchOKCode is the HTTP code returned for type AttemptAttemptIDClosePatchOK
const AttemptAttemptIDClosePatchOKCode int = 200

/*
AttemptAttemptIDClosePatchOK ОК

swagger:response attemptAttemptIdClosePatchOK
*/
type AttemptAttemptIDClosePatchOK struct {
}

// NewAttemptAttemptIDClosePatchOK creates AttemptAttemptIDClosePatchOK with default headers values
func NewAttemptAttemptIDClosePatchOK() *AttemptAttemptIDClosePatchOK {

	return &AttemptAttemptIDClosePatchOK{}
}

// WriteResponse to the client
func (o *AttemptAttemptIDClosePatchOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// AttemptAttemptIDClosePatchInternalServerErrorCode is the HTTP code returned for type AttemptAttemptIDClosePatchInternalServerError
const AttemptAttemptIDClosePatchInternalServerErrorCode int = 500

/*
AttemptAttemptIDClosePatchInternalServerError Ошибка сервера

swagger:response attemptAttemptIdClosePatchInternalServerError
*/
type AttemptAttemptIDClosePatchInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error500 `json:"body,omitempty"`
}

// NewAttemptAttemptIDClosePatchInternalServerError creates AttemptAttemptIDClosePatchInternalServerError with default headers values
func NewAttemptAttemptIDClosePatchInternalServerError() *AttemptAttemptIDClosePatchInternalServerError {

	return &AttemptAttemptIDClosePatchInternalServerError{}
}

// WithPayload adds the payload to the attempt attempt Id close patch internal server error response
func (o *AttemptAttemptIDClosePatchInternalServerError) WithPayload(payload *models.Error500) *AttemptAttemptIDClosePatchInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the attempt attempt Id close patch internal server error response
func (o *AttemptAttemptIDClosePatchInternalServerError) SetPayload(payload *models.Error500) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AttemptAttemptIDClosePatchInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
