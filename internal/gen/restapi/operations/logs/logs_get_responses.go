// Code generated by go-swagger; DO NOT EDIT.

package logs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"mgtu/digital-trace/main-backend-service/internal/gen/models"
)

// LogsGetOKCode is the HTTP code returned for type LogsGetOK
const LogsGetOKCode int = 200

/*
LogsGetOK OK

swagger:response logsGetOK
*/
type LogsGetOK struct {

	/*
	  In: Body
	*/
	Payload []*LogsGetOKBodyItems0 `json:"body,omitempty"`
}

// NewLogsGetOK creates LogsGetOK with default headers values
func NewLogsGetOK() *LogsGetOK {

	return &LogsGetOK{}
}

// WithPayload adds the payload to the logs get o k response
func (o *LogsGetOK) WithPayload(payload []*LogsGetOKBodyItems0) *LogsGetOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the logs get o k response
func (o *LogsGetOK) SetPayload(payload []*LogsGetOKBodyItems0) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *LogsGetOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*LogsGetOKBodyItems0, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// LogsGetInternalServerErrorCode is the HTTP code returned for type LogsGetInternalServerError
const LogsGetInternalServerErrorCode int = 500

/*
LogsGetInternalServerError Ошибка сервера

swagger:response logsGetInternalServerError
*/
type LogsGetInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error500 `json:"body,omitempty"`
}

// NewLogsGetInternalServerError creates LogsGetInternalServerError with default headers values
func NewLogsGetInternalServerError() *LogsGetInternalServerError {

	return &LogsGetInternalServerError{}
}

// WithPayload adds the payload to the logs get internal server error response
func (o *LogsGetInternalServerError) WithPayload(payload *models.Error500) *LogsGetInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the logs get internal server error response
func (o *LogsGetInternalServerError) SetPayload(payload *models.Error500) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *LogsGetInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
