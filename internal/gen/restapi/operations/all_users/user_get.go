// Code generated by go-swagger; DO NOT EDIT.

package all_users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// UserGetHandlerFunc turns a function with the right signature into a user get handler
type UserGetHandlerFunc func(UserGetParams) middleware.Responder

// Handle executing the request and returning a response
func (fn UserGetHandlerFunc) Handle(params UserGetParams) middleware.Responder {
	return fn(params)
}

// UserGetHandler interface for that can handle valid user get params
type UserGetHandler interface {
	Handle(UserGetParams) middleware.Responder
}

// NewUserGet creates a new http.Handler for the user get operation
func NewUserGet(ctx *middleware.Context, handler UserGetHandler) *UserGet {
	return &UserGet{Context: ctx, Handler: handler}
}

/*
UserGet swagger:route GET /user all_users userGet

Запрос на поиск информации о пользователях
*/
type UserGet struct {
	Context *middleware.Context
	Handler UserGetHandler
}

func (o *UserGet) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewUserGetParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}

// UserGetOKBodyItems0 user get o k body items0
//
// swagger:model UserGetOKBodyItems0
type UserGetOKBodyItems0 struct {

	// email
	Email string `json:"email,omitempty"`

	// id
	ID uint64 `json:"id,omitempty"`

	// login
	Login string `json:"login,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// surname
	Surname string `json:"surname,omitempty"`
}

// Validate validates this user get o k body items0
func (o *UserGetOKBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *UserGetOKBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *UserGetOKBodyItems0) UnmarshalBinary(b []byte) error {
	var res UserGetOKBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
