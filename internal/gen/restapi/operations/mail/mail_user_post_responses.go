// Code generated by go-swagger; DO NOT EDIT.

package mail

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"mgtu/digital-trace/main-backend-service/internal/gen/models"
)

// MailUserPostOKCode is the HTTP code returned for type MailUserPostOK
const MailUserPostOKCode int = 200

/*
MailUserPostOK OK

swagger:response mailUserPostOK
*/
type MailUserPostOK struct {

	/*
	  In: Body
	*/
	Payload *MailUserPostOKBody `json:"body,omitempty"`
}

// NewMailUserPostOK creates MailUserPostOK with default headers values
func NewMailUserPostOK() *MailUserPostOK {

	return &MailUserPostOK{}
}

// WithPayload adds the payload to the mail user post o k response
func (o *MailUserPostOK) WithPayload(payload *MailUserPostOKBody) *MailUserPostOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the mail user post o k response
func (o *MailUserPostOK) SetPayload(payload *MailUserPostOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *MailUserPostOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// MailUserPostInternalServerErrorCode is the HTTP code returned for type MailUserPostInternalServerError
const MailUserPostInternalServerErrorCode int = 500

/*
MailUserPostInternalServerError Ошибка сервера

swagger:response mailUserPostInternalServerError
*/
type MailUserPostInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error500 `json:"body,omitempty"`
}

// NewMailUserPostInternalServerError creates MailUserPostInternalServerError with default headers values
func NewMailUserPostInternalServerError() *MailUserPostInternalServerError {

	return &MailUserPostInternalServerError{}
}

// WithPayload adds the payload to the mail user post internal server error response
func (o *MailUserPostInternalServerError) WithPayload(payload *models.Error500) *MailUserPostInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the mail user post internal server error response
func (o *MailUserPostInternalServerError) SetPayload(payload *models.Error500) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *MailUserPostInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
