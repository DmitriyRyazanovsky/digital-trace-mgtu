// Code generated by go-swagger; DO NOT EDIT.

package achievement

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"mgtu/digital-trace/main-backend-service/internal/gen/models"
)

// UserAchievementPostOKCode is the HTTP code returned for type UserAchievementPostOK
const UserAchievementPostOKCode int = 200

/*
UserAchievementPostOK Изображение успешно добавлено

swagger:response userAchievementPostOK
*/
type UserAchievementPostOK struct {
}

// NewUserAchievementPostOK creates UserAchievementPostOK with default headers values
func NewUserAchievementPostOK() *UserAchievementPostOK {

	return &UserAchievementPostOK{}
}

// WriteResponse to the client
func (o *UserAchievementPostOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// UserAchievementPostInternalServerErrorCode is the HTTP code returned for type UserAchievementPostInternalServerError
const UserAchievementPostInternalServerErrorCode int = 500

/*
UserAchievementPostInternalServerError Ошибка сервера либо запроса

swagger:response userAchievementPostInternalServerError
*/
type UserAchievementPostInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error500 `json:"body,omitempty"`
}

// NewUserAchievementPostInternalServerError creates UserAchievementPostInternalServerError with default headers values
func NewUserAchievementPostInternalServerError() *UserAchievementPostInternalServerError {

	return &UserAchievementPostInternalServerError{}
}

// WithPayload adds the payload to the user achievement post internal server error response
func (o *UserAchievementPostInternalServerError) WithPayload(payload *models.Error500) *UserAchievementPostInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the user achievement post internal server error response
func (o *UserAchievementPostInternalServerError) SetPayload(payload *models.Error500) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UserAchievementPostInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
