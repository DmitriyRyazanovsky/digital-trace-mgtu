// Code generated by go-swagger; DO NOT EDIT.

package session

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"mgtu/digital-trace/main-backend-service/internal/gen/models"
)

// SessionPatchOKCode is the HTTP code returned for type SessionPatchOK
const SessionPatchOKCode int = 200

/*
SessionPatchOK Возвращаемые ответы

swagger:response sessionPatchOK
*/
type SessionPatchOK struct {

	/*
	  In: Body
	*/
	Payload *SessionPatchOKBody `json:"body,omitempty"`
}

// NewSessionPatchOK creates SessionPatchOK with default headers values
func NewSessionPatchOK() *SessionPatchOK {

	return &SessionPatchOK{}
}

// WithPayload adds the payload to the session patch o k response
func (o *SessionPatchOK) WithPayload(payload *SessionPatchOKBody) *SessionPatchOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the session patch o k response
func (o *SessionPatchOK) SetPayload(payload *SessionPatchOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SessionPatchOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// SessionPatchInternalServerErrorCode is the HTTP code returned for type SessionPatchInternalServerError
const SessionPatchInternalServerErrorCode int = 500

/*
SessionPatchInternalServerError Ошибка сервера

swagger:response sessionPatchInternalServerError
*/
type SessionPatchInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error500 `json:"body,omitempty"`
}

// NewSessionPatchInternalServerError creates SessionPatchInternalServerError with default headers values
func NewSessionPatchInternalServerError() *SessionPatchInternalServerError {

	return &SessionPatchInternalServerError{}
}

// WithPayload adds the payload to the session patch internal server error response
func (o *SessionPatchInternalServerError) WithPayload(payload *models.Error500) *SessionPatchInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the session patch internal server error response
func (o *SessionPatchInternalServerError) SetPayload(payload *models.Error500) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SessionPatchInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
