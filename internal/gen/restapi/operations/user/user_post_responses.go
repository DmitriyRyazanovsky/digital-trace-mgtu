// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"mgtu/digital-trace/main-backend-service/internal/gen/models"
)

// UserPostOKCode is the HTTP code returned for type UserPostOK
const UserPostOKCode int = 200

/*
UserPostOK Пользователь добавлен

swagger:response userPostOK
*/
type UserPostOK struct {

	/*
	  In: Body
	*/
	Payload *UserPostOKBody `json:"body,omitempty"`
}

// NewUserPostOK creates UserPostOK with default headers values
func NewUserPostOK() *UserPostOK {

	return &UserPostOK{}
}

// WithPayload adds the payload to the user post o k response
func (o *UserPostOK) WithPayload(payload *UserPostOKBody) *UserPostOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the user post o k response
func (o *UserPostOK) SetPayload(payload *UserPostOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UserPostOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UserPostInternalServerErrorCode is the HTTP code returned for type UserPostInternalServerError
const UserPostInternalServerErrorCode int = 500

/*
UserPostInternalServerError Ошибка сервера

swagger:response userPostInternalServerError
*/
type UserPostInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error500 `json:"body,omitempty"`
}

// NewUserPostInternalServerError creates UserPostInternalServerError with default headers values
func NewUserPostInternalServerError() *UserPostInternalServerError {

	return &UserPostInternalServerError{}
}

// WithPayload adds the payload to the user post internal server error response
func (o *UserPostInternalServerError) WithPayload(payload *models.Error500) *UserPostInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the user post internal server error response
func (o *UserPostInternalServerError) SetPayload(payload *models.Error500) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UserPostInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
