// Code generated by go-swagger; DO NOT EDIT.

package test

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"mgtu/digital-trace/main-backend-service/internal/gen/models"
)

// TestGetOKCode is the HTTP code returned for type TestGetOK
const TestGetOKCode int = 200

/*
TestGetOK OK

swagger:response testGetOK
*/
type TestGetOK struct {

	/*
	  In: Body
	*/
	Payload []*TestGetOKBodyItems0 `json:"body,omitempty"`
}

// NewTestGetOK creates TestGetOK with default headers values
func NewTestGetOK() *TestGetOK {

	return &TestGetOK{}
}

// WithPayload adds the payload to the test get o k response
func (o *TestGetOK) WithPayload(payload []*TestGetOKBodyItems0) *TestGetOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the test get o k response
func (o *TestGetOK) SetPayload(payload []*TestGetOKBodyItems0) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *TestGetOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*TestGetOKBodyItems0, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// TestGetInternalServerErrorCode is the HTTP code returned for type TestGetInternalServerError
const TestGetInternalServerErrorCode int = 500

/*
TestGetInternalServerError Ошибка сервера

swagger:response testGetInternalServerError
*/
type TestGetInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error500 `json:"body,omitempty"`
}

// NewTestGetInternalServerError creates TestGetInternalServerError with default headers values
func NewTestGetInternalServerError() *TestGetInternalServerError {

	return &TestGetInternalServerError{}
}

// WithPayload adds the payload to the test get internal server error response
func (o *TestGetInternalServerError) WithPayload(payload *models.Error500) *TestGetInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the test get internal server error response
func (o *TestGetInternalServerError) SetPayload(payload *models.Error500) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *TestGetInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
