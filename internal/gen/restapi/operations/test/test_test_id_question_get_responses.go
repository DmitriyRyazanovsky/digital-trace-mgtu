// Code generated by go-swagger; DO NOT EDIT.

package test

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"mgtu/digital-trace/main-backend-service/internal/gen/models"
)

// TestTestIDQuestionGetOKCode is the HTTP code returned for type TestTestIDQuestionGetOK
const TestTestIDQuestionGetOKCode int = 200

/*
TestTestIDQuestionGetOK ОК

swagger:response testTestIdQuestionGetOK
*/
type TestTestIDQuestionGetOK struct {

	/*
	  In: Body
	*/
	Payload []*TestTestIDQuestionGetOKBodyItems0 `json:"body,omitempty"`
}

// NewTestTestIDQuestionGetOK creates TestTestIDQuestionGetOK with default headers values
func NewTestTestIDQuestionGetOK() *TestTestIDQuestionGetOK {

	return &TestTestIDQuestionGetOK{}
}

// WithPayload adds the payload to the test test Id question get o k response
func (o *TestTestIDQuestionGetOK) WithPayload(payload []*TestTestIDQuestionGetOKBodyItems0) *TestTestIDQuestionGetOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the test test Id question get o k response
func (o *TestTestIDQuestionGetOK) SetPayload(payload []*TestTestIDQuestionGetOKBodyItems0) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *TestTestIDQuestionGetOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*TestTestIDQuestionGetOKBodyItems0, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// TestTestIDQuestionGetInternalServerErrorCode is the HTTP code returned for type TestTestIDQuestionGetInternalServerError
const TestTestIDQuestionGetInternalServerErrorCode int = 500

/*
TestTestIDQuestionGetInternalServerError Ошибка сервера

swagger:response testTestIdQuestionGetInternalServerError
*/
type TestTestIDQuestionGetInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error500 `json:"body,omitempty"`
}

// NewTestTestIDQuestionGetInternalServerError creates TestTestIDQuestionGetInternalServerError with default headers values
func NewTestTestIDQuestionGetInternalServerError() *TestTestIDQuestionGetInternalServerError {

	return &TestTestIDQuestionGetInternalServerError{}
}

// WithPayload adds the payload to the test test Id question get internal server error response
func (o *TestTestIDQuestionGetInternalServerError) WithPayload(payload *models.Error500) *TestTestIDQuestionGetInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the test test Id question get internal server error response
func (o *TestTestIDQuestionGetInternalServerError) SetPayload(payload *models.Error500) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *TestTestIDQuestionGetInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
