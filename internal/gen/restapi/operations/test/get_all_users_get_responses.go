// Code generated by go-swagger; DO NOT EDIT.

package test

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"mgtu/digital-trace/main-backend-service/internal/gen/models"
)

// GetAllUsersGetOKCode is the HTTP code returned for type GetAllUsersGetOK
const GetAllUsersGetOKCode int = 200

/*
GetAllUsersGetOK OK

swagger:response getAllUsersGetOK
*/
type GetAllUsersGetOK struct {

	/*
	  In: Body
	*/
	Payload []*GetAllUsersGetOKBodyItems0 `json:"body,omitempty"`
}

// NewGetAllUsersGetOK creates GetAllUsersGetOK with default headers values
func NewGetAllUsersGetOK() *GetAllUsersGetOK {

	return &GetAllUsersGetOK{}
}

// WithPayload adds the payload to the get all users get o k response
func (o *GetAllUsersGetOK) WithPayload(payload []*GetAllUsersGetOKBodyItems0) *GetAllUsersGetOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get all users get o k response
func (o *GetAllUsersGetOK) SetPayload(payload []*GetAllUsersGetOKBodyItems0) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAllUsersGetOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*GetAllUsersGetOKBodyItems0, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetAllUsersGetInternalServerErrorCode is the HTTP code returned for type GetAllUsersGetInternalServerError
const GetAllUsersGetInternalServerErrorCode int = 500

/*
GetAllUsersGetInternalServerError Ошибка сервера

swagger:response getAllUsersGetInternalServerError
*/
type GetAllUsersGetInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error500 `json:"body,omitempty"`
}

// NewGetAllUsersGetInternalServerError creates GetAllUsersGetInternalServerError with default headers values
func NewGetAllUsersGetInternalServerError() *GetAllUsersGetInternalServerError {

	return &GetAllUsersGetInternalServerError{}
}

// WithPayload adds the payload to the get all users get internal server error response
func (o *GetAllUsersGetInternalServerError) WithPayload(payload *models.Error500) *GetAllUsersGetInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get all users get internal server error response
func (o *GetAllUsersGetInternalServerError) SetPayload(payload *models.Error500) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAllUsersGetInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
