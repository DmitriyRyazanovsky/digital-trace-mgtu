// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "swagger": "2.0",
  "info": {
    "description": "Главный backend обработчик для проекта digital trace",
    "title": "digital-trace-main-backend-service",
    "version": "0.1.1"
  },
  "basePath": "/api/v1",
  "paths": {
    "/achievement/type": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "achievement"
        ],
        "summary": "Запрос на поиск типов достижения",
        "operationId": "achievementTypeGet",
        "parameters": [
          {
            "type": "integer",
            "format": "uint64",
            "description": "Поиск по id типа достижения",
            "name": "achive_id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Поиск по имени типа достижения",
            "name": "name",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "информация о типах достижений успешно получена",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "achive_type_id": {
                    "type": "integer",
                    "format": "uint64"
                  },
                  "achive_type_name": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/attempt": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "attempt"
        ],
        "summary": "Запрос на создание совой попытки",
        "operationId": "attemptPost",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "test_id": {
                  "type": "integer",
                  "format": "uint64"
                },
                "user_id": {
                  "type": "integer",
                  "format": "uint64"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Ошибка сервера",
            "schema": {
              "$ref": "#/definitions/error_500"
            }
          }
        }
      }
    },
    "/attempt/{attempt_id}/close": {
      "patch": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "attempt"
        ],
        "summary": "Запрос на обработку ответов по попытке и её закрытие",
        "operationId": "attemptAttemptIdClosePatch",
        "parameters": [
          {
            "type": "integer",
            "format": "uint64",
            "description": "Id попытки тестирования пользователя",
            "name": "attempt_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "ОК"
          },
          "500": {
            "description": "Ошибка сервера",
            "schema": {
              "$ref": "#/definitions/error_500"
            }
          }
        }
      }
    },
    "/auth": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "auth"
        ],
        "summary": "Запрос на аутентификацию пользователя",
        "operationId": "authPost",
        "parameters": [
          {
            "description": "email пользователя",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Возвращаемые ответы",
            "schema": {
              "type": "object",
              "properties": {
                "access_token": {
                  "type": "string"
                },
                "refresh_token": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Ошибка сервера",
            "schema": {
              "$ref": "#/definitions/error_500"
            }
          }
        }
      }
    },
    "/logs": {
      "get": {
        "tags": [
          "logs"
        ],
        "summary": "Получить логи сервиса",
        "operationId": "logsGet",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "level": {
                    "format": "string"
                  },
                  "msg": {
                    "format": "string"
                  },
                  "time": {
                    "format": "string"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Ошибка сервера",
            "schema": {
              "$ref": "#/definitions/error_500"
            }
          }
        }
      }
    },
    "/mail/user": {
      "get": {
        "tags": [
          "mail"
        ],
        "summary": "Запрос на подтверждение верефикации по mail",
        "operationId": "mailUserGet",
        "parameters": [
          {
            "type": "string",
            "name": "accept_token",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "user_id": {
                  "type": "integer",
                  "format": "uint64"
                }
              }
            }
          },
          "500": {
            "description": "Ошибка сервера",
            "schema": {
              "$ref": "#/definitions/error_500"
            }
          }
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "tags": [
          "mail"
        ],
        "summary": "Запрос на создание письма верефикации по email для пользователя",
        "operationId": "mailUserPost",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "role",
                "email",
                "login",
                "name",
                "surname",
                "password"
              ],
              "properties": {
                "email": {
                  "type": "string"
                },
                "login": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                },
                "role": {
                  "type": "string"
                },
                "surname": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Ошибка сервера",
            "schema": {
              "$ref": "#/definitions/error_500"
            }
          }
        }
      }
    },
    "/session": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "session"
        ],
        "summary": "Запрос на удаление сессии по refresh токену",
        "operationId": "sessionDelete",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "refresh_token": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Успешное выполнение операции"
          },
          "500": {
            "description": "Ошибка сервера",
            "schema": {
              "$ref": "#/definitions/error_500"
            }
          }
        }
      },
      "patch": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "session"
        ],
        "summary": "Запрос на продление сессии по refresh токену",
        "operationId": "sessionPatch",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "refresh_token": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Возвращаемые ответы",
            "schema": {
              "type": "object",
              "properties": {
                "access_token": {
                  "type": "string"
                },
                "refresh_token": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Ошибка сервера",
            "schema": {
              "$ref": "#/definitions/error_500"
            }
          }
        }
      }
    },
    "/test": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "test"
        ],
        "summary": "Вернуть главную информацию по тестам",
        "operationId": "testGet",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "content": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "test_id": {
                    "type": "integer",
                    "format": "uint64"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Ошибка сервера",
            "schema": {
              "$ref": "#/definitions/error_500"
            }
          }
        },
        "x-swagger-router-controller": "ControllerName"
      }
    },
    "/test/{test_id}/questions": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "test"
        ],
        "summary": "Запрос на получение списка всех вопросов по тесту",
        "operationId": "testTestIdQuestionGet",
        "parameters": [
          {
            "type": "integer",
            "format": "uint64",
            "description": "имя теста по которому мы делаем запрос",
            "name": "test_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "ОК",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "answers": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "content": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "button_type": {
                    "type": "integer",
                    "format": "uint64"
                  },
                  "content": {
                    "type": "string"
                  },
                  "question_id": {
                    "type": "integer",
                    "format": "uint64"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Ошибка сервера",
            "schema": {
              "$ref": "#/definitions/error_500"
            }
          }
        }
      }
    },
    "/user": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "all_users"
        ],
        "summary": "Запрос на поиск информации о пользователях",
        "operationId": "userGet",
        "parameters": [
          {
            "type": "integer",
            "format": "uint64",
            "description": "Поиск по Id пользователя",
            "name": "id",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "uint64",
            "description": "Поиск по роли пользователя",
            "name": "role_id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Поиск по email пользователя",
            "name": "email",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Поиск по логину пользователя",
            "name": "login",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Поиск по имени пользователя",
            "name": "name",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Поиск по фамилии пользователя",
            "name": "surname",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Информация о пользователях успешно получена",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "id": {
                    "type": "integer",
                    "format": "uint64"
                  },
                  "login": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "surname": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Ошибка сервера",
            "schema": {
              "$ref": "#/definitions/error_500"
            }
          }
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "user"
        ],
        "summary": "Запрос на добавление нового пользователя",
        "operationId": "userPost",
        "parameters": [
          {
            "type": "string",
            "description": "jwt auth",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "description": "Тело запроса",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "role_id",
                "email",
                "login",
                "name",
                "surname",
                "password"
              ],
              "properties": {
                "email": {
                  "type": "string"
                },
                "login": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                },
                "role_id": {
                  "type": "integer",
                  "format": "uint64"
                },
                "surname": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Пользователь добавлен",
            "schema": {
              "type": "object",
              "properties": {
                "user_id": {
                  "type": "integer",
                  "format": "uint64"
                }
              }
            }
          },
          "500": {
            "description": "Ошибка сервера",
            "schema": {
              "$ref": "#/definitions/error_500"
            }
          }
        }
      }
    },
    "/user/achievement": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "user"
        ],
        "summary": "Запрос на получение информации о достижениях пользователя",
        "operationId": "userAchievementGet",
        "parameters": [
          {
            "type": "string",
            "description": "jwt access auth",
            "name": "Authorization",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "информация о достижениях успешно получена",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "achievement_id": {
                    "type": "integer",
                    "format": "uint64"
                  },
                  "achievement_types": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "achievement_type_id": {
                          "type": "integer",
                          "format": "int64"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Ошибка сервера либо запроса",
            "schema": {
              "$ref": "#/definitions/error_500"
            }
          }
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "tags": [
          "user"
        ],
        "summary": "Запрос на добавление достижения пользователю",
        "operationId": "userAchievementPost",
        "parameters": [
          {
            "type": "string",
            "description": "jwt auth",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "description": "Тело запроса",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "achive_types": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  }
                },
                "image": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Изображение успешно добавлено"
          },
          "500": {
            "description": "Ошибка сервера либо запроса",
            "schema": {
              "$ref": "#/definitions/error_500"
            }
          }
        }
      }
    },
    "/user/achievement/{achive_id}/image": {
      "get": {
        "produces": [
          "image/png"
        ],
        "tags": [
          "user"
        ],
        "summary": "Запрос на получение ссылки на скачивание изображения достижения",
        "operationId": "user_Achievement_AchiveId_Image_Get",
        "parameters": [
          {
            "type": "string",
            "description": "jwt access auth",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "integer",
            "format": "uint64",
            "description": "Id достижения у пользователя",
            "name": "achive_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Изображение успешно получено",
            "schema": {
              "type": "string"
            },
            "headers": {
              "Content-Disposition": {
                "type": "string",
                "description": "File name"
              }
            }
          },
          "500": {
            "description": "Ошибка сервера либо запроса",
            "schema": {
              "$ref": "#/definitions/error_500"
            }
          }
        }
      }
    },
    "/user/attempt": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "user"
        ],
        "summary": "Запрос на поиск информации о попытках прохождения теста пользователем",
        "operationId": "userAttemptGet",
        "parameters": [
          {
            "type": "integer",
            "format": "uint64",
            "name": "test_id",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "uint64",
            "name": "status_id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "jwt auth",
            "name": "Authorization",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "attempt_id": {
                    "type": "integer",
                    "format": "uint64"
                  },
                  "status_id": {
                    "type": "integer",
                    "format": "uint64"
                  },
                  "test_id": {
                    "type": "integer",
                    "format": "uint64"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Ошибка сервера",
            "schema": {
              "$ref": "#/definitions/error_500"
            }
          }
        }
      }
    },
    "/user/attempt/{attempt_id}/answer": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "user"
        ],
        "summary": "Запрос на получение ответов по попытке от пользователя",
        "operationId": "userAttemptAttemptIdAnswerGet",
        "parameters": [
          {
            "type": "string",
            "description": "jwt access auth",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "integer",
            "format": "uint64",
            "name": "attempt_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "question_id": {
                    "type": "integer",
                    "format": "uint64"
                  },
                  "user_answer": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Ошибка сервера",
            "schema": {
              "$ref": "#/definitions/error_500"
            }
          }
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "tags": [
          "user"
        ],
        "summary": "Запрос на заполнение ответами попытки прохождения теста",
        "operationId": "userAttemptAttemptIdAnswerPut",
        "parameters": [
          {
            "type": "string",
            "description": "jwt access auth",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "integer",
            "format": "uint64",
            "name": "attempt_id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "question_id": {
                  "type": "integer",
                  "format": "uint64"
                },
                "user_answer": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Ошибка сервера",
            "schema": {
              "$ref": "#/definitions/error_500"
            }
          }
        }
      }
    },
    "/user/attempt/{attempt_id}/azbel_test": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "user"
        ],
        "summary": "Запрос на получение ответов на тест интересов от азбеля",
        "operationId": "userAttemptAttemptIdAzbelTestGet",
        "parameters": [
          {
            "type": "string",
            "description": "jwt access auth",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "integer",
            "format": "uint64",
            "description": "Id попытки",
            "name": "attempt_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Возвращаемые ответы",
            "schema": {
              "$ref": "#/definitions/testAzbel"
            }
          },
          "500": {
            "description": "Ошибка сервера",
            "schema": {
              "$ref": "#/definitions/error_500"
            }
          }
        }
      }
    },
    "/user/attempt/{attempt_id}/klimov_test": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "user"
        ],
        "summary": "Запрос на получение ответов на тест климова от пользователя",
        "operationId": "userAttemptAttemptIdKlimovTestGet",
        "parameters": [
          {
            "type": "string",
            "description": "jwt access auth",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "integer",
            "format": "uint64",
            "description": "Id попытки",
            "name": "attempt_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Возвращаемые ответы",
            "schema": {
              "$ref": "#/definitions/testKlimov"
            }
          },
          "500": {
            "description": "Ошибка сервера",
            "schema": {
              "$ref": "#/definitions/error_500"
            }
          }
        }
      }
    },
    "/user/avatar": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "user"
        ],
        "summary": "Запрос на добавление фотографии пользователя",
        "operationId": "user_avatar_get",
        "parameters": [
          {
            "type": "string",
            "description": "jwt auth",
            "name": "Authorization",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Изображение успешно получено",
            "schema": {
              "type": "string"
            },
            "headers": {
              "Content-Disposition": {
                "type": "string",
                "description": "File name"
              }
            }
          },
          "500": {
            "description": "Ошибка сервера либо запроса",
            "schema": {
              "$ref": "#/definitions/error_500"
            }
          }
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "user"
        ],
        "summary": "Запрос на добавление фотографии пользователя",
        "operationId": "user_avatar_put",
        "parameters": [
          {
            "description": "тело запроса",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "image_base64": {
                  "type": "string"
                },
                "prefix": {
                  "type": "string"
                }
              }
            }
          },
          {
            "type": "string",
            "description": "jwt auth",
            "name": "Authorization",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "ОК"
          },
          "500": {
            "description": "Ошибка сервера либо запроса",
            "schema": {
              "$ref": "#/definitions/error_500"
            }
          }
        }
      }
    },
    "/user/profile": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "user"
        ],
        "summary": "Запрос на получение личной информации о пользователе по acces токену",
        "operationId": "user_profile_get",
        "parameters": [
          {
            "type": "string",
            "description": "jwt auth",
            "name": "Authorization",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "created_at": {
                  "type": "string",
                  "format": "date-time"
                },
                "email": {
                  "type": "string",
                  "format": "email"
                },
                "id": {
                  "type": "integer",
                  "format": "uint64"
                },
                "login": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                },
                "role_id": {
                  "type": "integer",
                  "format": "uint64"
                },
                "surname": {
                  "type": "string"
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          "500": {
            "description": "Ошибка сервера",
            "schema": {
              "$ref": "#/definitions/error_500"
            }
          }
        }
      },
      "patch": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "user"
        ],
        "summary": "Запрос на изменение данных о пользователе",
        "operationId": "user_profile_patch",
        "parameters": [
          {
            "type": "integer",
            "format": "uint64",
            "description": "id",
            "name": "id",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "uint64",
            "description": "role_id",
            "name": "role_id",
            "in": "query"
          },
          {
            "type": "string",
            "format": "email",
            "description": "email",
            "name": "email",
            "in": "query"
          },
          {
            "type": "string",
            "description": "login",
            "name": "login",
            "in": "query"
          },
          {
            "type": "string",
            "description": "name",
            "name": "name",
            "in": "query"
          },
          {
            "type": "string",
            "description": "surname",
            "name": "surname",
            "in": "query"
          },
          {
            "type": "string",
            "description": "password",
            "name": "password",
            "in": "query"
          },
          {
            "type": "string",
            "description": "jwt auth",
            "name": "Authorization",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Ошибка сервера",
            "schema": {
              "$ref": "#/definitions/error_500"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "error_500": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        }
      }
    },
    "testAzbel": {
      "type": "object",
      "properties": {
        "biology_chemistry": {
          "type": "integer",
          "format": "uint64"
        },
        "business_management": {
          "type": "integer",
          "format": "uint64"
        },
        "construction": {
          "type": "integer",
          "format": "uint64"
        },
        "economics_finance": {
          "type": "integer",
          "format": "uint64"
        },
        "education": {
          "type": "integer",
          "format": "uint64"
        },
        "engineering_and_technical_sphere": {
          "type": "integer",
          "format": "uint64"
        },
        "fine_arts_design": {
          "type": "integer",
          "format": "uint64"
        },
        "foreign_languages": {
          "type": "integer",
          "format": "uint64"
        },
        "information_technology": {
          "type": "integer",
          "format": "uint64"
        },
        "journalism": {
          "type": "integer",
          "format": "uint64"
        },
        "jurisprudence": {
          "type": "integer",
          "format": "uint64"
        },
        "medicine": {
          "type": "integer",
          "format": "uint64"
        },
        "musical_and_performing_arts": {
          "type": "integer",
          "format": "uint64"
        },
        "physical_education_and_sports": {
          "type": "integer",
          "format": "uint64"
        },
        "physics_maths": {
          "type": "integer",
          "format": "uint64"
        },
        "service_sector_trade": {
          "type": "integer",
          "format": "uint64"
        },
        "socio_political_sphere": {
          "type": "integer",
          "format": "uint64"
        },
        "strong_structure": {
          "type": "integer",
          "format": "uint64"
        },
        "tourism": {
          "type": "integer",
          "format": "uint64"
        },
        "transport_logistics": {
          "type": "integer",
          "format": "uint64"
        }
      }
    },
    "testKlimov": {
      "type": "object",
      "required": [
        "human_sign",
        "human_human",
        "human_nature",
        "human_technic",
        "human_sign_system"
      ],
      "properties": {
        "human_human": {
          "type": "integer",
          "format": "uint64"
        },
        "human_nature": {
          "type": "integer",
          "format": "uint64"
        },
        "human_sign": {
          "type": "integer",
          "format": "uint64"
        },
        "human_sign_system": {
          "type": "integer",
          "format": "uint64"
        },
        "human_technic": {
          "type": "integer",
          "format": "uint64"
        }
      }
    }
  },
  "tags": [
    {
      "description": "Сущность авторизации",
      "name": "auth"
    },
    {
      "description": "Сущность сессий",
      "name": "session"
    },
    {
      "description": "Сущность пользователя",
      "name": "user"
    },
    {
      "description": "Сущность достижений",
      "name": "achievement"
    },
    {
      "description": "Сущность тестов",
      "name": "test"
    },
    {
      "description": "Сущность попытки тестирования",
      "name": "attempt"
    },
    {
      "description": "Сущность mail",
      "name": "mail"
    },
    {
      "description": "Сущность логгирования",
      "name": "logs"
    }
  ]
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "swagger": "2.0",
  "info": {
    "description": "Главный backend обработчик для проекта digital trace",
    "title": "digital-trace-main-backend-service",
    "version": "0.1.1"
  },
  "basePath": "/api/v1",
  "paths": {
    "/achievement/type": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "achievement"
        ],
        "summary": "Запрос на поиск типов достижения",
        "operationId": "achievementTypeGet",
        "parameters": [
          {
            "type": "integer",
            "format": "uint64",
            "description": "Поиск по id типа достижения",
            "name": "achive_id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Поиск по имени типа достижения",
            "name": "name",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "информация о типах достижений успешно получена",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AchievementTypeGetOKBodyItems0"
              }
            }
          }
        }
      }
    },
    "/attempt": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "attempt"
        ],
        "summary": "Запрос на создание совой попытки",
        "operationId": "attemptPost",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "test_id": {
                  "type": "integer",
                  "format": "uint64"
                },
                "user_id": {
                  "type": "integer",
                  "format": "uint64"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Ошибка сервера",
            "schema": {
              "$ref": "#/definitions/error_500"
            }
          }
        }
      }
    },
    "/attempt/{attempt_id}/close": {
      "patch": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "attempt"
        ],
        "summary": "Запрос на обработку ответов по попытке и её закрытие",
        "operationId": "attemptAttemptIdClosePatch",
        "parameters": [
          {
            "type": "integer",
            "format": "uint64",
            "description": "Id попытки тестирования пользователя",
            "name": "attempt_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "ОК"
          },
          "500": {
            "description": "Ошибка сервера",
            "schema": {
              "$ref": "#/definitions/error_500"
            }
          }
        }
      }
    },
    "/auth": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "auth"
        ],
        "summary": "Запрос на аутентификацию пользователя",
        "operationId": "authPost",
        "parameters": [
          {
            "description": "email пользователя",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Возвращаемые ответы",
            "schema": {
              "type": "object",
              "properties": {
                "access_token": {
                  "type": "string"
                },
                "refresh_token": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Ошибка сервера",
            "schema": {
              "$ref": "#/definitions/error_500"
            }
          }
        }
      }
    },
    "/logs": {
      "get": {
        "tags": [
          "logs"
        ],
        "summary": "Получить логи сервиса",
        "operationId": "logsGet",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/LogsGetOKBodyItems0"
              }
            }
          },
          "500": {
            "description": "Ошибка сервера",
            "schema": {
              "$ref": "#/definitions/error_500"
            }
          }
        }
      }
    },
    "/mail/user": {
      "get": {
        "tags": [
          "mail"
        ],
        "summary": "Запрос на подтверждение верефикации по mail",
        "operationId": "mailUserGet",
        "parameters": [
          {
            "type": "string",
            "name": "accept_token",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "user_id": {
                  "type": "integer",
                  "format": "uint64"
                }
              }
            }
          },
          "500": {
            "description": "Ошибка сервера",
            "schema": {
              "$ref": "#/definitions/error_500"
            }
          }
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "tags": [
          "mail"
        ],
        "summary": "Запрос на создание письма верефикации по email для пользователя",
        "operationId": "mailUserPost",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "role",
                "email",
                "login",
                "name",
                "surname",
                "password"
              ],
              "properties": {
                "email": {
                  "type": "string"
                },
                "login": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                },
                "role": {
                  "type": "string"
                },
                "surname": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "success": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Ошибка сервера",
            "schema": {
              "$ref": "#/definitions/error_500"
            }
          }
        }
      }
    },
    "/session": {
      "delete": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "session"
        ],
        "summary": "Запрос на удаление сессии по refresh токену",
        "operationId": "sessionDelete",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "refresh_token": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Успешное выполнение операции"
          },
          "500": {
            "description": "Ошибка сервера",
            "schema": {
              "$ref": "#/definitions/error_500"
            }
          }
        }
      },
      "patch": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "session"
        ],
        "summary": "Запрос на продление сессии по refresh токену",
        "operationId": "sessionPatch",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "refresh_token": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Возвращаемые ответы",
            "schema": {
              "type": "object",
              "properties": {
                "access_token": {
                  "type": "string"
                },
                "refresh_token": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Ошибка сервера",
            "schema": {
              "$ref": "#/definitions/error_500"
            }
          }
        }
      }
    },
    "/test": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "test"
        ],
        "summary": "Вернуть главную информацию по тестам",
        "operationId": "testGet",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TestGetOKBodyItems0"
              }
            }
          },
          "500": {
            "description": "Ошибка сервера",
            "schema": {
              "$ref": "#/definitions/error_500"
            }
          }
        },
        "x-swagger-router-controller": "ControllerName"
      }
    },
    "/test/{test_id}/questions": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "test"
        ],
        "summary": "Запрос на получение списка всех вопросов по тесту",
        "operationId": "testTestIdQuestionGet",
        "parameters": [
          {
            "type": "integer",
            "format": "uint64",
            "description": "имя теста по которому мы делаем запрос",
            "name": "test_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "ОК",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TestTestIDQuestionGetOKBodyItems0"
              }
            }
          },
          "500": {
            "description": "Ошибка сервера",
            "schema": {
              "$ref": "#/definitions/error_500"
            }
          }
        }
      }
    },
    "/user": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "all_users"
        ],
        "summary": "Запрос на поиск информации о пользователях",
        "operationId": "userGet",
        "parameters": [
          {
            "type": "integer",
            "format": "uint64",
            "description": "Поиск по Id пользователя",
            "name": "id",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "uint64",
            "description": "Поиск по роли пользователя",
            "name": "role_id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Поиск по email пользователя",
            "name": "email",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Поиск по логину пользователя",
            "name": "login",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Поиск по имени пользователя",
            "name": "name",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Поиск по фамилии пользователя",
            "name": "surname",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Информация о пользователях успешно получена",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserGetOKBodyItems0"
              }
            }
          },
          "500": {
            "description": "Ошибка сервера",
            "schema": {
              "$ref": "#/definitions/error_500"
            }
          }
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "user"
        ],
        "summary": "Запрос на добавление нового пользователя",
        "operationId": "userPost",
        "parameters": [
          {
            "type": "string",
            "description": "jwt auth",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "description": "Тело запроса",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "role_id",
                "email",
                "login",
                "name",
                "surname",
                "password"
              ],
              "properties": {
                "email": {
                  "type": "string"
                },
                "login": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                },
                "role_id": {
                  "type": "integer",
                  "format": "uint64"
                },
                "surname": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Пользователь добавлен",
            "schema": {
              "type": "object",
              "properties": {
                "user_id": {
                  "type": "integer",
                  "format": "uint64"
                }
              }
            }
          },
          "500": {
            "description": "Ошибка сервера",
            "schema": {
              "$ref": "#/definitions/error_500"
            }
          }
        }
      }
    },
    "/user/achievement": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "user"
        ],
        "summary": "Запрос на получение информации о достижениях пользователя",
        "operationId": "userAchievementGet",
        "parameters": [
          {
            "type": "string",
            "description": "jwt access auth",
            "name": "Authorization",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "информация о достижениях успешно получена",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserAchievementGetOKBodyItems0"
              }
            }
          },
          "500": {
            "description": "Ошибка сервера либо запроса",
            "schema": {
              "$ref": "#/definitions/error_500"
            }
          }
        }
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "tags": [
          "user"
        ],
        "summary": "Запрос на добавление достижения пользователю",
        "operationId": "userAchievementPost",
        "parameters": [
          {
            "type": "string",
            "description": "jwt auth",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "description": "Тело запроса",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "achive_types": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64",
                    "minimum": 0
                  }
                },
                "image": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Изображение успешно добавлено"
          },
          "500": {
            "description": "Ошибка сервера либо запроса",
            "schema": {
              "$ref": "#/definitions/error_500"
            }
          }
        }
      }
    },
    "/user/achievement/{achive_id}/image": {
      "get": {
        "produces": [
          "image/png"
        ],
        "tags": [
          "user"
        ],
        "summary": "Запрос на получение ссылки на скачивание изображения достижения",
        "operationId": "user_Achievement_AchiveId_Image_Get",
        "parameters": [
          {
            "type": "string",
            "description": "jwt access auth",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "integer",
            "format": "uint64",
            "description": "Id достижения у пользователя",
            "name": "achive_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Изображение успешно получено",
            "schema": {
              "type": "string"
            },
            "headers": {
              "Content-Disposition": {
                "type": "string",
                "description": "File name"
              }
            }
          },
          "500": {
            "description": "Ошибка сервера либо запроса",
            "schema": {
              "$ref": "#/definitions/error_500"
            }
          }
        }
      }
    },
    "/user/attempt": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "user"
        ],
        "summary": "Запрос на поиск информации о попытках прохождения теста пользователем",
        "operationId": "userAttemptGet",
        "parameters": [
          {
            "type": "integer",
            "format": "uint64",
            "name": "test_id",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "uint64",
            "name": "status_id",
            "in": "query"
          },
          {
            "type": "string",
            "description": "jwt auth",
            "name": "Authorization",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserAttemptGetOKBodyItems0"
              }
            }
          },
          "500": {
            "description": "Ошибка сервера",
            "schema": {
              "$ref": "#/definitions/error_500"
            }
          }
        }
      }
    },
    "/user/attempt/{attempt_id}/answer": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "user"
        ],
        "summary": "Запрос на получение ответов по попытке от пользователя",
        "operationId": "userAttemptAttemptIdAnswerGet",
        "parameters": [
          {
            "type": "string",
            "description": "jwt access auth",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "integer",
            "format": "uint64",
            "name": "attempt_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserAttemptAttemptIDAnswerGetOKBodyItems0"
              }
            }
          },
          "500": {
            "description": "Ошибка сервера",
            "schema": {
              "$ref": "#/definitions/error_500"
            }
          }
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "tags": [
          "user"
        ],
        "summary": "Запрос на заполнение ответами попытки прохождения теста",
        "operationId": "userAttemptAttemptIdAnswerPut",
        "parameters": [
          {
            "type": "string",
            "description": "jwt access auth",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "integer",
            "format": "uint64",
            "name": "attempt_id",
            "in": "path",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "question_id": {
                  "type": "integer",
                  "format": "uint64"
                },
                "user_answer": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64",
                    "minimum": 0
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Ошибка сервера",
            "schema": {
              "$ref": "#/definitions/error_500"
            }
          }
        }
      }
    },
    "/user/attempt/{attempt_id}/azbel_test": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "user"
        ],
        "summary": "Запрос на получение ответов на тест интересов от азбеля",
        "operationId": "userAttemptAttemptIdAzbelTestGet",
        "parameters": [
          {
            "type": "string",
            "description": "jwt access auth",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "integer",
            "format": "uint64",
            "description": "Id попытки",
            "name": "attempt_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Возвращаемые ответы",
            "schema": {
              "$ref": "#/definitions/testAzbel"
            }
          },
          "500": {
            "description": "Ошибка сервера",
            "schema": {
              "$ref": "#/definitions/error_500"
            }
          }
        }
      }
    },
    "/user/attempt/{attempt_id}/klimov_test": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "user"
        ],
        "summary": "Запрос на получение ответов на тест климова от пользователя",
        "operationId": "userAttemptAttemptIdKlimovTestGet",
        "parameters": [
          {
            "type": "string",
            "description": "jwt access auth",
            "name": "Authorization",
            "in": "header",
            "required": true
          },
          {
            "type": "integer",
            "format": "uint64",
            "description": "Id попытки",
            "name": "attempt_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Возвращаемые ответы",
            "schema": {
              "$ref": "#/definitions/testKlimov"
            }
          },
          "500": {
            "description": "Ошибка сервера",
            "schema": {
              "$ref": "#/definitions/error_500"
            }
          }
        }
      }
    },
    "/user/avatar": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "user"
        ],
        "summary": "Запрос на добавление фотографии пользователя",
        "operationId": "user_avatar_get",
        "parameters": [
          {
            "type": "string",
            "description": "jwt auth",
            "name": "Authorization",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Изображение успешно получено",
            "schema": {
              "type": "string"
            },
            "headers": {
              "Content-Disposition": {
                "type": "string",
                "description": "File name"
              }
            }
          },
          "500": {
            "description": "Ошибка сервера либо запроса",
            "schema": {
              "$ref": "#/definitions/error_500"
            }
          }
        }
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "user"
        ],
        "summary": "Запрос на добавление фотографии пользователя",
        "operationId": "user_avatar_put",
        "parameters": [
          {
            "description": "тело запроса",
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "image_base64": {
                  "type": "string"
                },
                "prefix": {
                  "type": "string"
                }
              }
            }
          },
          {
            "type": "string",
            "description": "jwt auth",
            "name": "Authorization",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "ОК"
          },
          "500": {
            "description": "Ошибка сервера либо запроса",
            "schema": {
              "$ref": "#/definitions/error_500"
            }
          }
        }
      }
    },
    "/user/profile": {
      "get": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "user"
        ],
        "summary": "Запрос на получение личной информации о пользователе по acces токену",
        "operationId": "user_profile_get",
        "parameters": [
          {
            "type": "string",
            "description": "jwt auth",
            "name": "Authorization",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "created_at": {
                  "type": "string",
                  "format": "date-time"
                },
                "email": {
                  "type": "string",
                  "format": "email"
                },
                "id": {
                  "type": "integer",
                  "format": "uint64"
                },
                "login": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                },
                "role_id": {
                  "type": "integer",
                  "format": "uint64"
                },
                "surname": {
                  "type": "string"
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          "500": {
            "description": "Ошибка сервера",
            "schema": {
              "$ref": "#/definitions/error_500"
            }
          }
        }
      },
      "patch": {
        "produces": [
          "application/json"
        ],
        "tags": [
          "user"
        ],
        "summary": "Запрос на изменение данных о пользователе",
        "operationId": "user_profile_patch",
        "parameters": [
          {
            "type": "integer",
            "format": "uint64",
            "description": "id",
            "name": "id",
            "in": "query"
          },
          {
            "type": "integer",
            "format": "uint64",
            "description": "role_id",
            "name": "role_id",
            "in": "query"
          },
          {
            "type": "string",
            "format": "email",
            "description": "email",
            "name": "email",
            "in": "query"
          },
          {
            "type": "string",
            "description": "login",
            "name": "login",
            "in": "query"
          },
          {
            "type": "string",
            "description": "name",
            "name": "name",
            "in": "query"
          },
          {
            "type": "string",
            "description": "surname",
            "name": "surname",
            "in": "query"
          },
          {
            "type": "string",
            "description": "password",
            "name": "password",
            "in": "query"
          },
          {
            "type": "string",
            "description": "jwt auth",
            "name": "Authorization",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Ошибка сервера",
            "schema": {
              "$ref": "#/definitions/error_500"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AchievementTypeGetOKBodyItems0": {
      "type": "object",
      "properties": {
        "achive_type_id": {
          "type": "integer",
          "format": "uint64"
        },
        "achive_type_name": {
          "type": "string"
        }
      }
    },
    "LogsGetOKBodyItems0": {
      "type": "object",
      "properties": {
        "level": {
          "format": "string"
        },
        "msg": {
          "format": "string"
        },
        "time": {
          "format": "string"
        }
      }
    },
    "TestGetOKBodyItems0": {
      "type": "object",
      "properties": {
        "content": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "test_id": {
          "type": "integer",
          "format": "uint64"
        }
      }
    },
    "TestTestIDQuestionGetOKBodyItems0": {
      "type": "object",
      "properties": {
        "answers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TestTestIDQuestionGetOKBodyItems0AnswersItems0"
          }
        },
        "button_type": {
          "type": "integer",
          "format": "uint64"
        },
        "content": {
          "type": "string"
        },
        "question_id": {
          "type": "integer",
          "format": "uint64"
        }
      }
    },
    "TestTestIDQuestionGetOKBodyItems0AnswersItems0": {
      "type": "object",
      "properties": {
        "content": {
          "type": "string"
        }
      }
    },
    "UserAchievementGetOKBodyItems0": {
      "type": "object",
      "properties": {
        "achievement_id": {
          "type": "integer",
          "format": "uint64"
        },
        "achievement_types": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserAchievementGetOKBodyItems0AchievementTypesItems0"
          }
        }
      }
    },
    "UserAchievementGetOKBodyItems0AchievementTypesItems0": {
      "type": "object",
      "properties": {
        "achievement_type_id": {
          "type": "integer",
          "format": "int64",
          "minimum": 0
        }
      }
    },
    "UserAttemptAttemptIDAnswerGetOKBodyItems0": {
      "type": "object",
      "properties": {
        "question_id": {
          "type": "integer",
          "format": "uint64"
        },
        "user_answer": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64",
            "minimum": 0
          }
        }
      }
    },
    "UserAttemptGetOKBodyItems0": {
      "type": "object",
      "properties": {
        "attempt_id": {
          "type": "integer",
          "format": "uint64"
        },
        "status_id": {
          "type": "integer",
          "format": "uint64"
        },
        "test_id": {
          "type": "integer",
          "format": "uint64"
        }
      }
    },
    "UserGetOKBodyItems0": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "uint64"
        },
        "login": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "surname": {
          "type": "string"
        }
      }
    },
    "error_500": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        }
      }
    },
    "testAzbel": {
      "type": "object",
      "properties": {
        "biology_chemistry": {
          "type": "integer",
          "format": "uint64"
        },
        "business_management": {
          "type": "integer",
          "format": "uint64"
        },
        "construction": {
          "type": "integer",
          "format": "uint64"
        },
        "economics_finance": {
          "type": "integer",
          "format": "uint64"
        },
        "education": {
          "type": "integer",
          "format": "uint64"
        },
        "engineering_and_technical_sphere": {
          "type": "integer",
          "format": "uint64"
        },
        "fine_arts_design": {
          "type": "integer",
          "format": "uint64"
        },
        "foreign_languages": {
          "type": "integer",
          "format": "uint64"
        },
        "information_technology": {
          "type": "integer",
          "format": "uint64"
        },
        "journalism": {
          "type": "integer",
          "format": "uint64"
        },
        "jurisprudence": {
          "type": "integer",
          "format": "uint64"
        },
        "medicine": {
          "type": "integer",
          "format": "uint64"
        },
        "musical_and_performing_arts": {
          "type": "integer",
          "format": "uint64"
        },
        "physical_education_and_sports": {
          "type": "integer",
          "format": "uint64"
        },
        "physics_maths": {
          "type": "integer",
          "format": "uint64"
        },
        "service_sector_trade": {
          "type": "integer",
          "format": "uint64"
        },
        "socio_political_sphere": {
          "type": "integer",
          "format": "uint64"
        },
        "strong_structure": {
          "type": "integer",
          "format": "uint64"
        },
        "tourism": {
          "type": "integer",
          "format": "uint64"
        },
        "transport_logistics": {
          "type": "integer",
          "format": "uint64"
        }
      }
    },
    "testKlimov": {
      "type": "object",
      "required": [
        "human_sign",
        "human_human",
        "human_nature",
        "human_technic",
        "human_sign_system"
      ],
      "properties": {
        "human_human": {
          "type": "integer",
          "format": "uint64"
        },
        "human_nature": {
          "type": "integer",
          "format": "uint64"
        },
        "human_sign": {
          "type": "integer",
          "format": "uint64"
        },
        "human_sign_system": {
          "type": "integer",
          "format": "uint64"
        },
        "human_technic": {
          "type": "integer",
          "format": "uint64"
        }
      }
    }
  },
  "tags": [
    {
      "description": "Сущность авторизации",
      "name": "auth"
    },
    {
      "description": "Сущность сессий",
      "name": "session"
    },
    {
      "description": "Сущность пользователя",
      "name": "user"
    },
    {
      "description": "Сущность достижений",
      "name": "achievement"
    },
    {
      "description": "Сущность тестов",
      "name": "test"
    },
    {
      "description": "Сущность попытки тестирования",
      "name": "attempt"
    },
    {
      "description": "Сущность mail",
      "name": "mail"
    },
    {
      "description": "Сущность логгирования",
      "name": "logs"
    }
  ]
}`))
}
